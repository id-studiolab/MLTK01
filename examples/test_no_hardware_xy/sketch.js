const knnClassifier = ml5.KNNClassifier();
let featureExtractor;

var dataClass1 = [
  [ 54, 54 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 49, 49 ],
  [ 49, 49 ],
  [ 51, 51 ],
  [ 53, 53, 53 ],
  [ 54, 54, 54 ],
  [ 54, 54, 54 ],
  [ 54, 54, 54 ],
  [ 54, 54, 54 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 53, 53, 53 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 53, 53, 53 ],
  [ 54, 54, 54 ],
  [ 53, 53, 53 ],
  [ 54, 54, 54 ],
  [ 55, 55 ],
  [ 56, 56, 56 ],
  [ 56, 56, 56 ],
  [ 56, 56, 56 ],
  [ 56, 56, 56 ],
  [ 54, 54, 54 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 52, 52, 52 ],
  [ 51, 51 ],
  [ 49, 49 ],
  [ 49, 49 ],
  [ 50, 50, 50 ],
  [ 50, 50, 50 ],
  [ 49, 49 ],
  [ 48, 48, 48 ],
  [ 46, 46, 46 ],
  [ 46, 46, 46 ],
  [ 45, 45, 45 ],
  [ 43, 43, 43 ],
  [ 47, 47, 47 ],
  [ 48, 48, 48 ],
  [ 46, 46, 46 ],
  [ 55, 55 ],
  [ 55, 55 ],
  [ 52, 52, 52 ],
  [ 50, 50, 50 ],
  [ 46, 46, 46 ],
  [ 47, 47, 47 ],
  [ 47, 47, 47 ],
  [ 48, 48, 48 ],
  [ 47, 47, 47 ],
  [ 45, 45, 45 ],
  [ 46, 46, 46 ],
  [ 48, 48, 48 ],
  [ 47, 47, 47 ],
  [ 46, 46, 46 ],
  [ 44, 44, 44 ],
  [ 44, 44, 44 ],
  [ 46, 46, 46 ],
  [ 47, 47, 47 ],
  [ 46, 46, 46 ],
  [ 47, 47, 47 ],
  [ 46, 46, 46 ],
  [ 46, 46, 46 ],
  [ 47, 47, 47 ],
  [ 46, 46, 46 ],
  [ 46, 46, 46 ]
]

var dataClass2 = [
  [ 243, 243, 243 ],
  [ 246, 246, 246 ],
  [ 238, 238, 238 ],
  [ 234, 234, 234 ],
  [ 234, 234, 234 ],
  [ 235, 235, 235 ],
  [ 241, 241, 241 ],
  [ 244, 244, 244 ],
  [ 247, 247, 247 ],
  [ 250, 250, 250 ],
  [ 249, 249, 249 ],
  [ 252, 252, 252 ],
  [ 254, 254, 254 ],
  [ 255, 255, 255 ],
  [ 257, 257, 257 ],
  [ 259, 259, 259 ],
  [ 263, 263, 263 ],
  [ 266, 266, 266 ],
  [ 269, 269, 269 ],
  [ 271, 271, 271 ],
  [ 270, 270, 270 ],
  [ 268, 268, 268 ],
  [ 254, 254, 254 ],
  [ 254, 254, 254 ],
  [ 229, 229, 229 ],
  [ 206, 206, 206 ],
  [ 176, 176, 176 ],
  [ 145, 145, 145 ],
  [ 125, 125, 125 ],
  [ 102, 102, 102 ],
  [ 102, 102, 102 ],
  [ 150, 150, 150 ],
  [ 222, 222, 222 ],
  [ 336, 336, 336 ],
  [ 336, 336, 336 ],
  [ 360, 360, 360 ],
  [ 359, 359, 359 ],
  [ 361, 361, 361 ],
  [ 368, 368, 368 ],
  [ 368, 368, 368 ],
  [ 379, 379, 379 ],
  [ 382, 382, 382 ],
  [ 380, 380, 380 ],
  [ 338, 338, 338 ],
  [ 303, 303, 303 ],
  [ 259, 259, 259 ],
  [ 183, 183, 183 ],
  [ 153, 153, 153 ],
  [ 111, 111, 111 ],
  [ 101, 101, 101 ],
  [ 98, 98, 98 ],
  [ 99, 99, 99 ],
  [ 113, 113, 113 ],
  [ 145, 145, 145 ],
  [ 231, 231, 231 ],
  [ 273, 273, 273 ],
  [ 282, 282, 282 ],
  [ 285, 285, 285 ],
  [ 281, 281, 281 ],
  [ 333, 333, 333 ],
  [ 354, 354, 354 ],
  [ 342, 342, 342 ],
  [ 342, 342, 342 ],
  [ 323, 323, 323 ],
  [ 300, 300, 300 ],
  [ 257, 257, 257 ],
  [ 233, 233, 233 ],
  [ 212, 212, 212 ],
  [ 188, 188, 188 ],
  [ 182, 182, 182 ],
  [ 176, 176, 176 ],
  [ 169, 169, 169 ],
  [ 184, 184, 184 ],
  [ 266, 266, 266 ],
  [ 347, 347, 347 ],
  [ 347, 347, 347 ],
  [ 403, 403, 403 ],
  [ 400, 400, 400 ],
  [ 398, 398, 398 ],
  [ 385, 385, 385 ],
  [ 361, 361, 361 ],
  [ 339, 339, 339 ],
  [ 305, 305, 305 ],
  [ 224, 224, 224 ],
  [ 197, 197, 197 ],
  [ 175, 175, 175 ],
  [ 175, 175, 175 ],
  [ 170, 170, 170 ],
  [ 170, 170, 170 ],
  [ 190, 190, 190 ],
  [ 196, 196, 196 ],
  [ 177, 177, 177 ],
  [ 237, 237, 237 ],
  [ 277, 277, 277 ],
  [ 355, 355, 355 ],
  [ 378, 378, 378 ],
  [ 387, 387, 387 ],
  [ 401, 401, 401 ],
  [ 392, 392, 392 ],
  [ 165, 165, 165 ]
]

let testData0 = [ 0, 0, 0 ];
let testData1 = [ 47, 47, 47 ];
let testData2 = [ 175, 175, 175 ];

function setup() {
  createCanvas( 400, 400, WEBGL );
  normalMaterial();

  background( 100 );
  strokeWeight( 10 );

  stroke( 'red' ); // Change the color
  for ( let i = 0; i < dataClass1.length; i++ ) {
    knnClassifier.addExample( dataClass1[ i ], 1 );
    point( dataClass1[ i ][ 0 ], dataClass1[ i ][ 1 ], dataClass1[ i ][ 2 ] );
  }

  stroke( 'blue' ); // Change the color
  for ( let i = 0; i < dataClass2.length; i++ ) {
    point( dataClass2[ i ][ 0 ], dataClass2[ i ][ 1 ], dataClass2[ i ][ 2 ] );
    knnClassifier.addExample( dataClass2[ i ], 2 );
  }

  classify( testData0 );
  classify( testData1 );
  classify( testData2 );
}

function draw() {
  background( 200 )
  orbitControl();

  stroke( 'red' ); // Change the color
  for ( let i = 0; i < dataClass1.length; i++ ) {
    point( dataClass1[ i ][ 0 ], dataClass1[ i ][ 1 ], dataClass1[ i ][ 2 ] );
  }

  stroke( 'blue' ); // Change the color
  for ( let i = 0; i < dataClass2.length; i++ ) {
    point( dataClass2[ i ][ 0 ], dataClass2[ i ][ 1 ], dataClass2[ i ][ 2 ] );

  }
}

function classify( data ) {
  // Get the total number of labels from knnClassifier
  const numLabels = knnClassifier.getNumLabels();

  console.log( knnClassifier.getCountByLabel() );

  if ( numLabels <= 0 ) {
    console.error( 'There is no examples in any label' );
    return;
  }
  knnClassifier.classify( data, gotResults );
}

// Show the results
function gotResults( err, result ) {
  // Display any error
  if ( err ) {
    console.error( err );
  } else {
    console.log( result );
  }
}